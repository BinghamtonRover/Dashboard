# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints. See the following for docs:
# https://dart.dev/guides/language/analysis-options
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:lint/package.yaml  # has more lints than flutter_lints

analyzer:
  language:
    # Strict casts isn't helpful with null safety. It only notifies you on `dynamic`, 
    # which happens all the time in JSON. 
    # 
    # See https://github.com/dart-lang/language/blob/main/resources/type-system/strict-casts.md
    strict-casts: false

    # Don't let any types be inferred as `dynamic`.
    # 
    # See https://github.com/dart-lang/language/blob/main/resources/type-system/strict-inference.md
    strict-inference: true

    # Don't let Dart infer the wrong type on the left side of an assignment. 
    # 
    # See https://github.com/dart-lang/language/blob/main/resources/type-system/strict-raw-types.md
    strict-raw-types: true

  exclude: 
    - lib/generated/**.dart

linter:
  rules:
    # Rules NOT in package:lint
    prefer_double_quotes: true
    public_member_api_docs: true

    # Rules to be disabled from package:lint
    always_use_package_imports: false
    use_key_in_widget_constructors: false
    comment_references: true
